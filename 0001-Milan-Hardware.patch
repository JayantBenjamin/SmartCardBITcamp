From 035f7347dd217e80b2c158f41fbbfb5b737e0e89 Mon Sep 17 00:00:00 2001
From: doobvoob <milandave07@gmail.com>
Date: Sun, 25 Mar 2018 09:14:20 +0530
Subject: [PATCH] Milan Hardware

---
 Hardware/Last_edit.ino/Last_edit.ino.ino           | 265 +++++++++++++++++++++
 Hardware/RFID_Access/RFID_Access.ino               |  63 +++++
 Hardware/RFIDskillupdate/RFIDskillupdate.ino       | 166 +++++++++++++
 Hardware/RFIDskillupdate/wifi.ino                  |  89 +++++++
 Hardware/accessforidtag.ino/accessforidtag.ino.ino | 136 +++++++++++
 5 files changed, 719 insertions(+)
 create mode 100644 Hardware/Last_edit.ino/Last_edit.ino.ino
 create mode 100644 Hardware/RFID_Access/RFID_Access.ino
 create mode 100644 Hardware/RFIDskillupdate/RFIDskillupdate.ino
 create mode 100644 Hardware/RFIDskillupdate/wifi.ino
 create mode 100644 Hardware/accessforidtag.ino/accessforidtag.ino.ino

diff --git a/Hardware/Last_edit.ino/Last_edit.ino.ino b/Hardware/Last_edit.ino/Last_edit.ino.ino
new file mode 100644
index 0000000..a76d5fe
--- /dev/null
+++ b/Hardware/Last_edit.ino/Last_edit.ino.ino
@@ -0,0 +1,265 @@
+#include <deprecated.h>
+#include <MFRC522.h>
+#include <MFRC522Debug.h>
+#include <MFRC522Extended.h>
+#include <MFRC522Hack.h>
+#include <require_cpp11.h>
+
+#include <SPI.h>
+#include <MFRC522.h>
+
+#include <ESP8266WiFi.h>
+#include <WiFiClient.h>
+ 
+// WiFi information
+const char ssid[] = "nigawut"; //Wifi Name ssid   
+const char password[]  = "yelepassword"; //password 
+String line="";
+
+//Only used if using Static IP
+IPAddress ip(192, 168, 0, 6); //IP
+IPAddress gatewayDNS(192, 168, 0, 1);//DNS and Gewateway
+IPAddress netmask(255, 255, 255,0); //Netmask
+
+//Server IP or domain name
+const char* host = "iotmumbai.000webhostapp.com/"; //host
+//http://<my-local-subnet-host>:80/foo.html
+
+constexpr uint8_t RST_PIN = 5;          //reset pin ka data to d1 in nodemcu check karliyo
+constexpr uint8_t SS_PIN = 4;         // SS pin ka data to d2 in node mcu
+
+int statuss = 0;
+int out = 0;
+String content= "";
+String UIDIDI="";
+String UIDIDILAST="";
+
+int counter,i,j,b;   //wow it was in sleep mode 
+float t1,t2;
+boolean wificonnect = false;
+char webstring [2];
+boolean gtfo =false;
+const char* check="z";
+int a[5];
+String item="";
+// Global variables
+WiFiClient client;
+
+
+MFRC522 mfrc522(SS_PIN, RST_PIN); //instance 
+
+// Attempt to connect to WiFi
+void connectWiFi() {
+  Serial.println("Connecting to Wifi");
+  WiFi.mode(WIFI_STA);
+//  WiFi.config(ip, gateway, subnet); 
+  WiFi.begin(ssid, password);
+  while (WiFi.status() != WL_CONNECTED) 
+  {
+    //digitalWrite(D1,HIGH);
+    if(counter > 15)
+    {
+      Serial.println("- can't connect, going to sleep");
+       wificonnect = false;
+      // digitalWrite(D1,LOW);    
+      // hibernate(failConnectRetryInterval);
+    }
+   delay(300);
+    //digitalWrite(D1,LOW);
+    Serial.print(".");
+    delay(300);
+  //  digitalWrite(D1,HIGH);
+    counter++;
+  }
+  if(WiFi.status() == WL_CONNECTED)
+  {
+  Serial.print(ssid);  
+  Serial.println(" connected");
+  wificonnect = true;
+//  digitalWrite(D1,HIGH); // data sending to delta
+  }
+  }
+
+
+void connecthost()
+{
+  int  counter=0;
+  bool gtfo=false;
+  Serial.print("connecting to ");
+  Serial.println(host);
+  
+  WiFiClient client; //Client to handle TCP Connection
+  const int httpPort = 80;
+  if (!client.connect(host, httpPort)) { //Connect to server using port httpPort
+    Serial.println("connection failed");
+    //return;
+    //digitalWrite(D7,HIGH);
+    }
+
+    String url = "http://jayantbenjamin.000webhostapp.com/RAIThack/giveOTP.php?UID="+item; //https://stackoverflow.com/questions/1336126/does-every-web-request-send-the-browser-cookies //URL 
+   
+  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
+               "Host: " + host + "\r\n" +
+               "Accept: */*"+"\r\n"+
+               "Connection: close\r\n\r\n");
+                t1=millis();
+  //
+              
+  unsigned long timeout = millis();
+  while (client.available() == 0) {
+    if (millis() - timeout > 25000) { //Try to fetch response for 25 seconds
+      Serial.println(">>> Client Timeout !");
+      client.stop();
+      return;
+    }
+  }
+  
+  // Read all the lines of the reply from server and print them to Serial
+  counter=0;
+  while(client.available())
+  {
+    
+    // String line = client.readStringUntil('\r');
+    
+    char in1 = client.read();
+    line+=in1;
+    counter++;
+//    led=true;
+    Serial.print(in1);
+    }
+    //Serial.print(line);
+    Serial.println("");
+    Serial.println("********************************");
+   //Serial.print(line);
+  Serial.println();
+  Serial.println("closing connection");
+  client.stop(); //Close Connection
+  t2=millis();
+  t1=t2-t1;
+  Serial.print("Time Taken ");
+  Serial.println(t1/1000);
+  Serial.print("Total String Length ");
+  Serial.println(counter);
+ }
+
+void setup() 
+{
+    // Set up serial console to read web page
+  Serial.begin(9600);
+  Serial.println("************");
+  Serial.println("begin");
+  // Connect to WiFi
+  
+//  Serial.begin(9600);    
+  while (!Serial);    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)
+  SPI.begin();      
+
+  
+  mfrc522.PCD_Init();   //MFRC522 ka initialization
+  mfrc522.PCD_DumpVersionToSerial();  // details of PCD - MFRC522 Card Reader details
+  Serial.println(F("Scan PICC to see UID, SAK, type, and data blocks for further understanding"));
+
+  connectWiFi();
+
+}
+
+
+void readID()
+{
+  byte letter;
+      
+  Serial.println("Read ID Function Call huaaa");
+  //Serial.println(content.substring(1,24));
+  for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+            content.toUpperCase();
+            String UIDIDI= content.substring(1,24);
+            Serial.println();
+            Serial.println(UIDIDI);
+            if((UIDIDI!=0)&&(UIDIDI!=UIDIDILAST))
+            {
+                Serial.println("New stuff");
+                String item="";
+                item+=UIDIDI[0];
+                item+=UIDIDI[1];
+                item+=UIDIDI[3];
+                item+=UIDIDI[4];
+                item+=UIDIDI[6];
+                item+=UIDIDI[7];
+                item+=UIDIDI[9];
+                item+=UIDIDI[10];
+                
+                Serial.println(item);
+               
+                Serial.println("**************########*************");
+            
+            }
+                UIDIDILAST=UIDIDI;
+                        
+}
+
+void loop() 
+{
+     delay(500);
+   connecthost(); 
+
+    if ( ! mfrc522.PICC_IsNewCardPresent()) //will show data if a new card browsed over the device PICC_ReadCardSerial()
+    {
+      //Serial.println("New Card Found");
+      Serial.println();
+      Serial.println("ye void loop mein new card waala function hei");
+      //Serial.print(" UID tag :");
+      
+      /*for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+                   content.toUpperCase();//get the uid letters to upper case now
+       */
+                  readID();
+                  Serial.println("Read id se value call hua hei 2 baar aana chaiye");
+                  Serial.println("*********************************************************\n");
+                 
+                 Serial.println(UIDIDI);
+
+                   
+                  if (content.substring(1) == "83 4B 25 D9") //UID no. to compare for payment
+                 {
+                  Serial.println("Compare successful hua");
+                   Serial.println(" Access Granted ");
+                   Serial.println(" Thank you for payment/adding the skill ");
+                   delay(1000);
+                   Serial.println(" Please check your updates on the mobile for further details ");
+                   Serial.println();
+                   statuss = 1;
+                 }
+  
+                  else  
+                   {
+                      Serial.println(" Card not detected yet/galat card hei ");
+                      delay(3000);
+                    }
+                   content = "";
+                    
+ }
+  if ( ! mfrc522.PICC_ReadCardSerial()) //will show data when same card presented again
+  {
+    Serial.println("Card already user yaaaaar ye chal raha hei bc##########");
+    return;
+  }
+
+  // Dump debug info about the card;
+  //mfrc522.PICC_DumpToSerial(&(mfrc522.uid));
+
+}
+
+
+
diff --git a/Hardware/RFID_Access/RFID_Access.ino b/Hardware/RFID_Access/RFID_Access.ino
new file mode 100644
index 0000000..ccaa43e
--- /dev/null
+++ b/Hardware/RFID_Access/RFID_Access.ino
@@ -0,0 +1,63 @@
+#include <deprecated.h>
+#include <MFRC522.h>
+#include <MFRC522Debug.h>
+#include <MFRC522Extended.h>
+#include <MFRC522Hack.h>
+#include <require_cpp11.h>
+
+
+#define SS_PIN 4  //D2
+#define RST_PIN 5 //D1
+
+#include <SPI.h>
+
+MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
+int statuss = 0;
+int out = 0;
+void setup() 
+{
+  Serial.begin(9600);   // Initiate a serial communication
+  SPI.begin();      // Initiate  SPI bus
+  mfrc522.PCD_Init();   // Initiate MFRC522
+}
+void loop() 
+{
+  // Look for new cards
+  if ( ! mfrc522.PICC_IsNewCardPresent()) 
+  {
+    return;
+  }
+  // Select one of the cards
+  if ( ! mfrc522.PICC_ReadCardSerial()) 
+  {
+    return;
+  }
+  //Show UID on serial monitor
+  Serial.println();
+  Serial.print(" UID tag :");
+  String content= "";
+  byte letter;
+  for (byte i = 0; i < mfrc522.uid.size; i++) 
+  {
+     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+     Serial.print(mfrc522.uid.uidByte[i], HEX);
+     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+     content.concat(String(mfrc522.uid.uidByte[i], HEX));
+  }
+  content.toUpperCase();
+  Serial.println();
+  if (content.substring(1) == "8E 39 32 50") //change UID of the card that you want to give access
+  {
+    Serial.println(" Access Granted ");
+    Serial.println(" Welcome Mr.Circuit ");
+    delay(1000);
+    Serial.println(" Have FUN ");
+    Serial.println();
+    statuss = 1;
+  }
+  
+  else   {
+    Serial.println(" Access Denied ");
+    delay(3000);
+  }
+} 
diff --git a/Hardware/RFIDskillupdate/RFIDskillupdate.ino b/Hardware/RFIDskillupdate/RFIDskillupdate.ino
new file mode 100644
index 0000000..c17b328
--- /dev/null
+++ b/Hardware/RFIDskillupdate/RFIDskillupdate.ino
@@ -0,0 +1,166 @@
+#include <deprecated.h>
+#include <MFRC522.h>
+#include <MFRC522Debug.h>
+#include <MFRC522Extended.h>
+#include <MFRC522Hack.h>
+#include <require_cpp11.h>
+
+#include <SPI.h>
+#include <MFRC522.h>
+
+//////////Wifi lib
+#include <ESP8266WiFi.h>
+#include <WiFiClient.h>
+constexpr uint8_t RST_PIN = 5;          //reset pin ka data to d1 in nodemcu check karliyo
+constexpr uint8_t SS_PIN = 4;         // SS pin ka data to d2 in node mcu
+
+int statuss = 0;
+int out = 0;
+String content= "";
+String UIDIDI="";
+String UIDIDILAST="";
+////Wifi constants 
+// WiFi information
+const char ssid[] = "nigawut"; //Wifi Name ssid   
+const char password[]  = "yelepassword"; //password 
+String line="";
+//Only used if using Static IP
+IPAddress ip(192, 168, 0, 6); //IP
+IPAddress gatewayDNS(192, 168, 0, 1);//DNS and Gewateway
+IPAddress netmask(255, 255, 255,0); //Netmask
+
+//Server IP or domain name
+const char* host = "jayantbenjamin.000webhostapp.com"; //host
+//http://<my-local-subnet-host>:80/foo.html
+ // constants
+int counter,i,j,b;   //wow it was in sleep mode 
+float t1,t2;
+boolean wificonnect = false;
+char webstring [2];
+boolean gtfo =false;
+const char* check="z";
+int a[5];
+String url="";
+// Global variables
+WiFiClient client;
+MFRC522 mfrc522(SS_PIN, RST_PIN); //instance 
+
+void setup() 
+{
+  Serial.begin(9600);    
+  while (!Serial);    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)
+  SPI.begin();      
+  mfrc522.PCD_Init();   //MFRC522 ka initialization
+  mfrc522.PCD_DumpVersionToSerial();  // details of PCD - MFRC522 Card Reader details
+  Serial.println(F("Scan PICC to see UID, SAK, type, and data blocks for further understanding"));
+  connectWiFi();
+}
+
+
+void readID()
+{
+  byte letter;
+      
+  Serial.println("Read ID Function Call huaaa");
+  //Serial.println(content.substring(1,24));
+  for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+            content.toUpperCase();
+            String UIDIDI= content.substring(1,24);
+            Serial.println();
+            Serial.println(UIDIDI);
+            if((UIDIDI!=0)&&(UIDIDI!=UIDIDILAST))
+            {
+                Serial.println("New stuff");
+                String item="";
+                item+=UIDIDI[0];
+                item+=UIDIDI[1];
+                item+=UIDIDI[3];
+                item+=UIDIDI[4];
+                item+=UIDIDI[6];
+                item+=UIDIDI[7];
+                item+=UIDIDI[9];
+                item+=UIDIDI[10];
+                
+                Serial.println(item);
+                url="http://jayantbenjamin.000webhostapp.com/RAIThack/skill.php?UID=";
+                url+=item;
+                Serial.println(url);
+                connecthost();
+                Serial.println("**************########*************");
+            
+            }
+                UIDIDILAST=UIDIDI;
+                int str_len = UIDIDI.length() + 1; 
+
+                // Prepare the character array (the buffer) 
+                char char_array[str_len];
+
+                // Copy it over 
+                UIDIDI.toCharArray(char_array, str_len);
+                /*char charBuf[50];
+                UIDIDI.toCharArray(charBuf, 50)
+                Serial.println(UIDIDI);
+            */          
+}
+
+void loop() 
+{
+    if ( ! mfrc522.PICC_IsNewCardPresent()) //will show data if a new card browsed over the device PICC_ReadCardSerial()
+    {
+      //Serial.println("New Card Found");
+      Serial.println();
+      Serial.println("ye void loop mein new card waala function hei");
+      //Serial.print(" UID tag :");
+      
+      /*for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+                   content.toUpperCase();//get the uid letters to upper case now
+       */
+                  readID();
+                  Serial.println("Read id se value call hua hei 2 baar aana chaiye");
+                  Serial.println("*********************************************************\n");
+                 
+                 Serial.println(UIDIDI);
+
+                   
+                  if (content.substring(1) == "83 4B 25 D9") //UID no. to compare for payment
+                 {
+                  Serial.println("Compare successful hua");
+                   Serial.println(" Access Granted ");
+                   Serial.println(" Thank you for payment/adding the skill ");
+                   delay(1000);
+                   Serial.println(" Please check your updates on the mobile for further details ");
+                   Serial.println();
+                   statuss = 1;
+                 }
+  
+                  else  
+                   {
+                      Serial.println(" Card not detected yet/galat card hei ");
+                      delay(3000);
+                    }
+                   content = "";
+                    
+ }
+  if ( ! mfrc522.PICC_ReadCardSerial()) //will show data when same card presented again
+  {
+    Serial.println("Card already user yaaaaar ye chal raha hei bc##########");
+    return;
+  }
+
+  // Dump debug info about the card;
+  //mfrc522.PICC_DumpToSerial(&(mfrc522.uid));
+
+}
+
diff --git a/Hardware/RFIDskillupdate/wifi.ino b/Hardware/RFIDskillupdate/wifi.ino
new file mode 100644
index 0000000..d02f10f
--- /dev/null
+++ b/Hardware/RFIDskillupdate/wifi.ino
@@ -0,0 +1,89 @@
+void connectWiFi() {
+  Serial.println("Connecting to Wifi");
+  WiFi.mode(WIFI_STA);
+//  WiFi.config(ip, gateway, subnet); 
+  WiFi.begin(ssid, password);
+  while (WiFi.status() != WL_CONNECTED) 
+  {
+    digitalWrite(D1,HIGH);
+    if(counter > 15)
+    {
+      Serial.println("- can't connect, going to sleep");
+       wificonnect = false;
+       digitalWrite(D1,LOW);    
+      // hibernate(failConnectRetryInterval);
+    }
+   delay(300);
+    digitalWrite(D1,LOW);
+    Serial.print(".");
+    delay(300);
+    digitalWrite(D1,HIGH);
+    counter++;
+  }
+  if(WiFi.status() == WL_CONNECTED)
+  {
+  Serial.print(ssid);  
+  Serial.println(" connected");
+  wificonnect = true;
+  digitalWrite(D1,HIGH); // data sending to delta
+  }
+  }
+void connecthost()
+{
+  counter=0;
+  gtfo=false;
+  Serial.print("connecting to ");
+  Serial.println(host);
+  
+  WiFiClient client; //Client to handle TCP Connection
+  const int httpPort = 80;
+  if (!client.connect(host, httpPort)) { //Connect to server using port httpPort
+    Serial.println("connection failed");
+    //return;
+    digitalWrite(D7,HIGH);}
+
+
+  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
+               "Host: " + host + "\r\n" +
+               "Accept: */*"+"\r\n"+
+               "Connection: close\r\n\r\n");
+                t1=millis();
+  //
+              
+  unsigned long timeout = millis();
+  while (client.available() == 0) {
+    if (millis() - timeout > 25000) { //Try to fetch response for 25 seconds
+      Serial.println(">>> Client Timeout !");
+      client.stop();
+      return;
+    }
+  }
+  
+  // Read all the lines of the reply from server and print them to Serial
+  counter=0;
+  while(client.available())
+  {
+    
+    // String line = client.readStringUntil('\r');
+    
+    char in1 = client.read();
+    line+=in1;
+    counter++;
+//    led=true;
+    Serial.print(in1);
+    }
+    //Serial.print(line);
+    Serial.println("");
+    Serial.println("********************************");
+   //Serial.print(line);
+  Serial.println();
+  Serial.println("closing connection");
+  client.stop(); //Close Connection
+  t2=millis();
+  t1=t2-t1;
+  Serial.print("Time Taken ");
+  Serial.println(t1/1000);
+  Serial.print("Total String Length ");
+  Serial.println(counter);
+ 
+}
diff --git a/Hardware/accessforidtag.ino/accessforidtag.ino.ino b/Hardware/accessforidtag.ino/accessforidtag.ino.ino
new file mode 100644
index 0000000..77aea29
--- /dev/null
+++ b/Hardware/accessforidtag.ino/accessforidtag.ino.ino
@@ -0,0 +1,136 @@
+#include <deprecated.h>
+#include <MFRC522.h>
+#include <MFRC522Debug.h>
+#include <MFRC522Extended.h>
+#include <MFRC522Hack.h>
+#include <require_cpp11.h>
+
+#include <SPI.h>
+#include <MFRC522.h>
+
+constexpr uint8_t RST_PIN = 5;          //reset pin ka data to d1 in nodemcu check karliyo
+constexpr uint8_t SS_PIN = 4;         // SS pin ka data to d2 in node mcu
+
+int statuss = 0;
+int out = 0;
+String content= "";
+String UIDIDI="";
+String UIDIDILAST="";
+
+MFRC522 mfrc522(SS_PIN, RST_PIN); //instance 
+
+void setup() 
+{
+  Serial.begin(9600);    
+  while (!Serial);    // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)
+  SPI.begin();      
+  mfrc522.PCD_Init();   //MFRC522 ka initialization
+  mfrc522.PCD_DumpVersionToSerial();  // details of PCD - MFRC522 Card Reader details
+  Serial.println(F("Scan PICC to see UID, SAK, type, and data blocks for further understanding"));
+
+}
+
+
+void readID()
+{
+  byte letter;
+      
+  Serial.println("Read ID Function Call huaaa");
+  //Serial.println(content.substring(1,24));
+  for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+            content.toUpperCase();
+            String UIDIDI= content.substring(1,24);
+            Serial.println();
+            Serial.println(UIDIDI);
+            if((UIDIDI!=0)&&(UIDIDI!=UIDIDILAST))
+            {
+                Serial.println("New stuff");
+                String item="";
+                item+=UIDIDI[0];
+                item+=UIDIDI[1];
+                item+=UIDIDI[3];
+                item+=UIDIDI[4];
+                item+=UIDIDI[6];
+                item+=UIDIDI[7];
+                item+=UIDIDI[9];
+                item+=UIDIDI[10];
+                
+                Serial.println(item);
+               
+                Serial.println("**************########*************");
+            
+            }
+                UIDIDILAST=UIDIDI;
+                int str_len = UIDIDI.length() + 1; 
+
+                // Prepare the character array (the buffer) 
+                char char_array[str_len];
+
+                // Copy it over 
+                UIDIDI.toCharArray(char_array, str_len);
+                /*char charBuf[50];
+                UIDIDI.toCharArray(charBuf, 50)
+                Serial.println(UIDIDI);
+            */          
+}
+
+void loop() 
+{
+    if ( ! mfrc522.PICC_IsNewCardPresent()) //will show data if a new card browsed over the device PICC_ReadCardSerial()
+    {
+      //Serial.println("New Card Found");
+      Serial.println();
+      Serial.println("ye void loop mein new card waala function hei");
+      //Serial.print(" UID tag :");
+      
+      /*for (byte i = 0; i < mfrc522.uid.size; i++) 
+          {
+            Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
+            Serial.print(mfrc522.uid.uidByte[i], HEX);
+            content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
+            content.concat(String(mfrc522.uid.uidByte[i], HEX));
+          }
+                   content.toUpperCase();//get the uid letters to upper case now
+       */
+                  readID();
+                  Serial.println("Read id se value call hua hei 2 baar aana chaiye");
+                  Serial.println("*********************************************************\n");
+                 
+                 Serial.println(UIDIDI);
+
+                   
+                  if (content.substring(1) == "83 4B 25 D9") //UID no. to compare for payment
+                 {
+                  Serial.println("Compare successful hua");
+                   Serial.println(" Access Granted ");
+                   Serial.println(" Thank you for payment/adding the skill ");
+                   delay(1000);
+                   Serial.println(" Please check your updates on the mobile for further details ");
+                   Serial.println();
+                   statuss = 1;
+                 }
+  
+                  else  
+                   {
+                      Serial.println(" Card not detected yet/galat card hei ");
+                      delay(3000);
+                    }
+                   content = "";
+                    
+ }
+  if ( ! mfrc522.PICC_ReadCardSerial()) //will show data when same card presented again
+  {
+    Serial.println("Card already user yaaaaar ye chal raha hei bc##########");
+    return;
+  }
+
+  // Dump debug info about the card;
+  //mfrc522.PICC_DumpToSerial(&(mfrc522.uid));
+
+}
-- 
2.14.2.windows.1

